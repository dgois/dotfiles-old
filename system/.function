# Get named var (usage: get "VAR_NAME")

get() {
  echo "${!1}"
}

# Executable

is-executable() {
  local BIN=$(command -v "$1" 2>/dev/null)
  if [[ ! $BIN == "" && -x $BIN ]]; then true; else false; fi
}

is-supported() {
  if [ $# -eq 1 ]; then
    if eval "$1" > /dev/null 2>&1; then true; else false; fi
  else
    if eval "$1" > /dev/null 2>&1; then
      echo -n "$2"
    else
      echo -n "$3"
    fi
  fi
}

# Add to path

prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}

# Show 256 TERM colors

colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
  o=00$i;
  echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

# Calculator

c() {
  echo "$*" | bc -l;
}

# Weather

meteo() {
  local CITY=${1:-"Salto, Brazil"}
  curl -4 "wttr.in/$CITY"
}

remove_outdated_cask_versions() {
  #Variables
  cask_directory='/opt/homebrew-cask/Caskroom'
  outdated_versions=()

  #Iterate to show all app versions
  for app in $(ls $cask_directory); do
    versions_amount="$(ls $cask_directory/$app | wc -l | xargs)"

    if [[ $versions_amount > 1 ]]
    then
      echo "app: $app"
      for version in $(ls -rt $cask_directory/$app | head -$(($versions_amount - 1))); do
        echo " OLD: $version"
        outdated_versions=("${outdated_versions[@]}" "$cask_directory/$app/$version")
      done

      echo " LAST: $(ls -t $cask_directory/$app | head -1)"
    fi
  done

  if [[ $versions_amount > 1 ]];
  then
    #Label
    echo
    echo " OLD : Old versions"
    echo " LAST : Last version"
    echo

    #Confirm if the user want to delete old versions
    echo -n "Are you sure of delete the outdated versions marked with X? [Yy | nN] "
    read -N 1 reply
    echo

    #Delete old version if Y|y
    if test "$reply" = "y" -o "$reply" = "Y"; 
    then
      for old_versions in ${outdated_versions[@]}; do
        echo "Delete app: $old_versions"
        rm -r $old_versions
      done
    else
      echo "Operation cancelled!"
    fi
  else
    echo "There are no old versions to delete!"
  fi
}
